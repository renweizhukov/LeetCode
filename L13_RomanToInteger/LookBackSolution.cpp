class Solution {    int romanChToInt(const char ch)    {        switch (ch)        {        case 'I':            return 1;        case 'V':            return 5;        case 'X':            return 10;        case 'L':            return 50;        case 'C':            return 100;        case 'D':            return 500;        case 'M':            return 1000;        default:            return 0;        }    }public:    int romanToInt(string s)    {        int ret  = 0;        // We set prev to 1001 because the maximum roman character is 1000.        int prev  = 1001;        for (int i  = 0; i < s.length(); i++)        {            int curr  = romanChToInt(s[i]);            if (prev < curr)            {                // This roman character is supposed to be substracted but has                 // been added, e.g., IX, IV, so we substract 2*prev from ret.                ret  -= 2 * prev;            }            ret  += curr;            prev  = curr;        }        return ret;    }};